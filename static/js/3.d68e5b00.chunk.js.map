{"version":3,"sources":["components/Profile/Profile.module.scss","components/Profile/ProfileStatus/ProfileStatus.module.scss","components/Profile/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/Profile.js"],"names":["module","exports","ProfileStatusWidthHooks","props","useState","eidtMode","setEditMode","status","setStatus","useEffect","className","classes","ProfileStatus","onDoubleClick","isOwner","onBlur","updateStatus","onChange","e","currentTarget","value","type","autoFocus","Profile","userId","match","params","this","getProfileThunk","getStatusThunk","isLoading","Spinner","profileInfo","contacts","photos","fullName","ownerUserId","ProfileInfo","ProfileImage","src","large","alt","ProfileDescr","updateStatusThunk","ProfileContacts","href","vk","facebook","github","website","instagram","youtube","twitter","mainLink","Component","compose","connect","state","authReducer","profileReducer","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,gBAAkB,mC,oBCA/JD,EAAOC,QAAU,CAAC,cAAgB,uC,+KCkDnBC,EA/CiB,SAAAC,GAAU,IAAD,EAEPC,oBAAS,GAFF,mBAEhCC,EAFgC,KAEtBC,EAFsB,OAGXF,mBAASD,EAAMI,QAHJ,mBAGhCA,EAHgC,KAGxBC,EAHwB,KAKvCC,qBAAW,WACTD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAeV,OACE,yBAAKG,UAAWC,IAAQC,gBACpBP,GACA,6BACE,0BAAMQ,cAAeV,EAAMW,QAjBV,WACvBR,GAAY,IAgBiD,MACpDH,EAAMI,QAAU,mHAKtBF,GACC,6BACE,2BACEU,OAtBiB,WACzBT,GAAY,GACZH,EAAMa,aAAaT,IAqBXU,SAlBa,SAAAC,GACrBV,EAAUU,EAAEC,cAAcC,QAkBlBC,KAAK,OACLC,WAAW,EACXF,MAAOb,O,SCzBbgB,E,2MACJC,OAAS,EAAKrB,MAAMsB,MAAMC,OAAOF,O,mFAG/BG,KAAKxB,MAAMyB,gBAAgBD,KAAKH,QAChCG,KAAKxB,MAAM0B,eAAeF,KAAKH,U,+BAI/B,IAAKG,KAAKxB,MAAM2B,UACd,OAAO,kBAACC,EAAA,EAAD,MAFF,MAaHJ,KAAKxB,MAAM6B,YAPbR,EANK,EAMLA,OACAS,EAPK,EAOLA,SACAC,EARK,EAQLA,OACAC,EATK,EASLA,SAMIrB,EAAUa,KAAKxB,MAAMiC,cAAgBZ,EAE3C,OACE,yBAAKd,UAAWC,IAAQY,SACtB,yBAAKb,UAAWC,IAAQ0B,aACtB,yBAAK3B,UAAWC,IAAQ2B,cACtB,yBACEC,IACEL,EAAOM,MACHN,EAAOM,MACP,uHAENC,IAAI,YAGR,yBAAK/B,UAAWC,IAAQ+B,cACtB,4BAAKP,GAEL,kBAAC,EAAD,CAAyB5B,OAAQoB,KAAKxB,MAAMI,OAAQO,QAASA,EAASE,aAAcW,KAAKxB,MAAMwC,sBAGnG,yBAAKjC,UAAWC,IAAQiC,iBACtB,4BACE,4BACE,uBAAGC,KAAMZ,EAASa,IAAlB,OAEF,4BACE,uBAAGD,KAAMZ,EAASc,UAAlB,OAEF,4BACE,uBAAGF,KAAMZ,EAASe,QAAlB,WAEF,4BACE,uBAAGH,KAAMZ,EAASgB,SAAlB,YAEF,4BACE,uBAAGJ,KAAMZ,EAASiB,WAAlB,cAEF,4BACE,uBAAGL,KAAMZ,EAASkB,SAAlB,YAEF,4BACE,uBAAGN,KAAMZ,EAASmB,SAAlB,YAEF,4BACE,uBAAGP,KAAMZ,EAASoB,UAAlB,oB,GApEQC,aAsFPC,sBACbC,aAVsB,SAAAC,GACtB,MAAO,CACLrB,YAAaqB,EAAMC,YAAYlC,OAC/BQ,YAAayB,EAAME,eAAe3B,YAClCF,UAAW2B,EAAME,eAAe7B,UAChCvB,OAAQkD,EAAME,eAAepD,UAKN,CACvBqB,oBACAC,mBACAc,wBAEFiB,IANaL,CAQbhC","file":"static/js/3.d68e5b00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__ClbKO\",\"ProfileInfo\":\"Profile_ProfileInfo__by2da\",\"ProfileImage\":\"Profile_ProfileImage__18RSG\",\"ProfileContacts\":\"Profile_ProfileContacts__3oDKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__3AGgT\"};","import React from 'react';\r\nimport classes from './ProfileStatus.module.scss';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWidthHooks = props => {\r\n\r\n  const [eidtMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ProfileStatus}>\r\n      {!eidtMode && (\r\n        <div>\r\n          <span onDoubleClick={props.isOwner ? activateEditMode: null} >\r\n            {props.status || 'Статус не установлен'}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {eidtMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            type='text'\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWidthHooks;\r\n","import React, { Component } from 'react';\r\nimport classes from './Profile.module.scss';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n// import ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ProfileStatusWidthHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport {\r\n  getProfileThunk,\r\n  getStatusThunk,\r\n  updateStatusThunk\r\n} from '../../redux/reducers/profileReducer';\r\n\r\n//import { withAuthRedirect } from '../hoc/withAuthRedirect';\r\n\r\nclass Profile extends Component {\r\n  userId = this.props.match.params.userId;\r\n\r\n  componentDidMount() {\r\n    this.props.getProfileThunk(this.userId);\r\n    this.props.getStatusThunk(this.userId);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLoading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    const {\r\n      userId,\r\n      contacts,\r\n      photos,\r\n      fullName,\r\n      //aboutMe,\r\n      //lookingForAJob,\r\n      //lookingForAJobDescription\r\n    } = this.props.profileInfo;\r\n\r\n    const isOwner = this.props.ownerUserId === userId;\r\n\r\n    return (\r\n      <div className={classes.Profile}>\r\n        <div className={classes.ProfileInfo}>\r\n          <div className={classes.ProfileImage}>\r\n            <img\r\n              src={\r\n                photos.large\r\n                  ? photos.large\r\n                  : 'https://specenergo.ru/sites/default/files/styles/mt_testimonial_image/public/2016-11/testimonial-4.jpg?itok=a7UblV6p'\r\n              }\r\n              alt='avatar'\r\n            />\r\n          </div>\r\n          <div className={classes.ProfileDescr}>\r\n            <h1>{fullName}</h1>\r\n            {/* <ProfileStatus status={this.props.status} updateStatus={this.props.updateStatusThunk} /> */}\r\n            <ProfileStatusWidthHooks status={this.props.status} isOwner={isOwner} updateStatus={this.props.updateStatusThunk}/>\r\n          </div>\r\n        </div>\r\n        <div className={classes.ProfileContacts}>\r\n          <ul>\r\n            <li>\r\n              <a href={contacts.vk}>VK</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.facebook}>FB</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.github}>Github</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.website}>website</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.instagram}>instagram</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.youtube}>youtube</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.twitter}>twitter</a>\r\n            </li>\r\n            <li>\r\n              <a href={contacts.mainLink}>mainLink</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ownerUserId: state.authReducer.userId,\r\n    profileInfo: state.profileReducer.profileInfo,\r\n    isLoading: state.profileReducer.isLoading,\r\n    status: state.profileReducer.status\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    updateStatusThunk\r\n  }),\r\n  withRouter\r\n  //withAuthRedirect\r\n)(Profile);\r\n"],"sourceRoot":""}